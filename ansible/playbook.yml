- name: Setup Flask App and Monitoring on EC2
  hosts: flask_server
  become: yes

  tasks:
    - name: Update system packages
      apt:
        update_cache: yes

    - name: Install Docker
      apt:
        name: docker.io
        state: present

    - name: Start Docker service
      service:
        name: docker
        state: started
        enabled: yes

    - name: Stop existing Flask app container (if running)
      docker_container:
        name: flask-app-container
        state: stopped
        ignore_errors: yes   # Ignore errors if the container is not running

    - name: Remove existing Flask app container
      docker_container:
        name: flask-app-container
        state: absent
        ignore_errors: yes

    - name: Pull the latest Flask Docker image from Docker Hub
      docker_image:
        name: omkarsg07/flask-app
        tag: latest
        source: pull

    - name: Run the Flask app container with latest image
      docker_container:
        name: flask-app-container
        image: omkarsg07/flask-app:latest
        state: started
        restart_policy: always
        published_ports:
          - "5000:5000"
        detach: yes

    - name: Create monitoring folder
      file:
        path: /home/ubuntu/monitoring
        state: directory

    - name: Copy docker-compose file for Prometheus & Grafana
      copy:
        src: monitoring/docker-compose.yml
        dest: /home/ubuntu/monitoring/docker-compose.yml

    - name: Copy prometheus.yml config
      copy:
        src: monitoring/prometheus.yml
        dest: /home/ubuntu/monitoring/prometheus.yml

    - name: Run Prometheus and Grafana containers
      command: docker-compose up -d
      args:
        chdir: /home/ubuntu/monitoring

    - name: Pull Node Exporter image
      docker_image:
        name: prom/node-exporter
        source: pull

    - name: Run Node Exporter container
      docker_container:
        name: node-exporter
        image: prom/node-exporter
        state: started
        restart_policy: always
        ports:
          - "9100:9100"

    - name: Restart Prometheus container
      docker_container:
        name: prometheus
        state: started
        restart: yes

    - name: Restart Grafana container
      docker_container:
        name: grafana
        state: started
        restart: yes